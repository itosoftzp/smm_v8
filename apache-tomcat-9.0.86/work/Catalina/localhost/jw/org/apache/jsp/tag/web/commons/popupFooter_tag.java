/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-10 02:54:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tag.web.commons;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class popupFooter_tag
    extends javax.servlet.jsp.tagext.SimpleTagSupport
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.servlet.jsp.JspContext jspContext;
  private java.io.Writer _jspx_sout;
  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public void setJspContext(javax.servlet.jsp.JspContext ctx) {
    super.setJspContext(ctx);
    java.util.ArrayList _jspx_nested = null;
    java.util.ArrayList _jspx_at_begin = null;
    java.util.ArrayList _jspx_at_end = null;
    this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(this, ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);
  }

  public javax.servlet.jsp.JspContext getJspContext() {
    return this.jspContext;
  }

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    return _jsp_instancemanager;
  }

  private void _jspInit(javax.servlet.ServletConfig config) {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(config.getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(config);
  }

  public void _jspDestroy() {
  }

  public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException {
    javax.servlet.jsp.PageContext _jspx_page_context = (javax.servlet.jsp.PageContext)jspContext;
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) _jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) _jspx_page_context.getResponse();
    javax.servlet.http.HttpSession session = _jspx_page_context.getSession();
    javax.servlet.ServletContext application = _jspx_page_context.getServletContext();
    javax.servlet.ServletConfig config = _jspx_page_context.getServletConfig();
    javax.servlet.jsp.JspWriter out = jspContext.getOut();
    _jspInit(config);
    jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,jspContext);

    try {
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            $(function(){\n");
      out.write("                $(\"body\").on(\"click\", \".ui-tabs-nav li.ui-tabs-active\", function(){\n");
      out.write("                    var tabs = $(this).closest(\".ui-tabs-nav\");\n");
      out.write("                    if (!$(tabs).hasClass(\"focus\")) {\n");
      out.write("                        $(tabs).addClass(\"focus\");\n");
      out.write("                        $(tabs).find(\"a\").off(\"click.tabsfocus\");\n");
      out.write("                        $(tabs).find(\"a\").on(\"click.tabsfocus\", function(){\n");
      out.write("                            setTimeout(function(){\n");
      out.write("                                $(tabs).removeClass(\"focus\");\n");
      out.write("                                $(tabs).find(\"a\").off(\"click.tabsfocus\"); \n");
      out.write("                                $(\"body\").off(\"click.bodytabs\");\n");
      out.write("                            }, 100);\n");
      out.write("                        });\n");
      out.write("                        $(\"body\").off(\"click.bodytabs\");\n");
      out.write("                        $(\"body\").on(\"click.bodytabs\", function(e){\n");
      out.write("                            if (!$(tabs).is(e.target) && $(tabs).has(e.target).length === 0) {\n");
      out.write("                                $(tabs).removeClass(\"focus\");\n");
      out.write("                                $(tabs).find(\"a\").off(\"click.tabsfocus\"); \n");
      out.write("                                $(\"body\").off(\"click.bodytabs\");\n");
      out.write("                            }\n");
      out.write("                        });\n");
      out.write("                    } else {\n");
      out.write("                        $(tabs).removeClass(\"focus\");\n");
      out.write("                        $(tabs).find(\"a\").off(\"click.tabsfocus\"); \n");
      out.write("                        $(\"body\").off(\"click.bodytabs\");\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("                $(\"body\").on(\"submit\", \"form.blockui\", function(){\n");
      out.write("                    UI.blockUI();\n");
      out.write("                    return true;\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                if ($(\"form.blockui select, #main-body-content-filter select\").length > 0) {\n");
      out.write("                    $(\"form.blockui select, #main-body-content-filter select\").each(function(){\n");
      out.write("                        if (!$(this).parent().is(\"td\")) {\n");
      out.write("                            if ($(\"body\").hasClass(\"rtl\")) {\n");
      out.write("                                $(this).addClass(\"chosen-rtl\");\n");
      out.write("                            }\n");
      out.write("                            $(this).off(\"change.chosenupdate\");\n");
      out.write("                            $(this).chosen({width: \"50%\", placeholder_text: \" \"});\n");
      out.write("                            $(this).on(\"change.chosenupdate\", function(){\n");
      out.write("                                $(this).trigger(\"chosen:updated\");\n");
      out.write("                            });\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            HelpGuide.base = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("\"\n");
      out.write("            HelpGuide.attachTo = \"#main-body-header\";\n");
      out.write("            HelpGuide.show();\n");
      out.write("        </script>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/includes/csrf.jsp", out, true);
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch( java.lang.Throwable t ) {
      if( t instanceof javax.servlet.jsp.SkipPageException )
          throw (javax.servlet.jsp.SkipPageException) t;
      if( t instanceof java.io.IOException )
          throw (java.io.IOException) t;
      if( t instanceof java.lang.IllegalStateException )
          throw (java.lang.IllegalStateException) t;
      if( t instanceof javax.servlet.jsp.JspException )
          throw (javax.servlet.jsp.JspException) t;
      throw new javax.servlet.jsp.JspException(t);
    } finally {
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,super.getJspContext());
      ((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();
    }
  }
}
